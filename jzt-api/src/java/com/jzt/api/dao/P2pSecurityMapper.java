package com.jzt.api.dao;

import com.jzt.api.domain.P2pSecurity;
import com.jzt.api.domain.P2pSecurityExample;
import com.jzt.api.domain.P2pSecurityWithBLOBs;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface P2pSecurityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int countByExample(P2pSecurityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int deleteByExample(P2pSecurityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int insert(P2pSecurityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int insertSelective(P2pSecurityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    List<P2pSecurityWithBLOBs> selectByExampleWithBLOBs(P2pSecurityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    List<P2pSecurity> selectByExample(P2pSecurityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    P2pSecurityWithBLOBs selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int updateByExampleSelective(@Param("record") P2pSecurityWithBLOBs record, @Param("example") P2pSecurityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int updateByExampleWithBLOBs(@Param("record") P2pSecurityWithBLOBs record, @Param("example") P2pSecurityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int updateByExample(@Param("record") P2pSecurity record, @Param("example") P2pSecurityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int updateByPrimaryKeySelective(P2pSecurityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int updateByPrimaryKeyWithBLOBs(P2pSecurityWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table p2p_security
     *
     * @mbggenerated Sun Mar 12 23:14:32 CST 2017
     */
    int updateByPrimaryKey(P2pSecurity record);
}