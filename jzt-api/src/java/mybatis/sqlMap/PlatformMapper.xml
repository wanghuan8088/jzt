<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzt.api.dao.PlatformMapper" >
  <resultMap id="BaseResultMap" type="com.jzt.api.domain.Platform" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
      <result column="typeName" property="typeName" jdbcType="VARCHAR" />
    <result column="rank" property="rank" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="name_before" property="nameBefore" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="total_score" property="totalScore" jdbcType="DOUBLE" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="DATE" />
    <result column="end_time" property="endTime" jdbcType="DATE" />
    <result column="province" property="province" jdbcType="INTEGER" />
    <result column="city" property="city" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="company" property="company" jdbcType="INTEGER" />
    <result column="registered_capital" property="registeredCapital" jdbcType="DOUBLE" />
  </resultMap>

  <resultMap id="BankInfoResultMap" type="com.jzt.api.domain.BankInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="plat_id" property="platId" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="total_profit" property="totalProfit" jdbcType="DOUBLE" />
    <result column="total_equity" property="totalEquity" jdbcType="DOUBLE" />
    <result column="bad_asset" property="badAsset" jdbcType="DOUBLE" />
    <result column="bad_loan_rate" property="badLoanRate" jdbcType="DOUBLE" />
    <result column="total_provision" property="totalProvision" jdbcType="DOUBLE" />
    <result column="loss_asset" property="lossAsset" jdbcType="DOUBLE" />
    <result column="total_asset" property="totalAsset" jdbcType="DOUBLE" />
    <result column="total_deposit" property="totalDeposit" jdbcType="DOUBLE" />
    <result column="total_loan" property="totalLoan" jdbcType="DOUBLE" />
    <result column="total_other" property="totalOther" jdbcType="DOUBLE" />
    <result column="income" property="income" jdbcType="DOUBLE" />
    <result column="interest_income" property="interestIncome" jdbcType="DOUBLE" />
    <result column="commission" property="commission" jdbcType="DOUBLE" />
    <result column="stockholder_num" property="stockholderNum" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>


  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    id, type, name, name_before, state, icon, start_time, end_time, province, city, create_time, 
    update_time, is_delete, company
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jzt.api.domain.PlatformExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from platform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0" >
      limit #{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from platform
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="queryBanks" resultMap="BaseResultMap" >
  	select p.id as id,p.type as type,p.name as name,p.icon as icon,(select total_score from bank_eval where plat_id=p.id) as total_score
	FROM platform p , bank_plat b
	where  p.type=1 and p.id = b.plat_id 
	<if test="types !=null and types !=''">
	and b.type in 
		<foreach item="item" index="index" collection="list" open="("
            separator="," close=")">
            #{item}  
         </foreach>
	</if>
	<if test="startRow != null and pageSize != null and pageSize != 0" >
      limit #{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  

  <select id="description" resultType="map" parameterType="java.lang.Integer" >
    select
        platform.id as id,
        platform.name as name,
        platform.start_time as start_time,
        platform.icon as icon,
        province.name as province_name,
        city.name as city_name,
        plat_web.description as description
    from platform
    LEFT JOIN plat_web ON platform.id=plat_web.plat_id
    LEFT JOIN province ON platform.province=province.id
    LEFT JOIN city ON platform.city=city.id
    where platform.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="listP2pPlat" resultType="map"  >
    select
    platform.id as id,
    platform.name as name
    from platform
    where platform.type = 0
  </select>

  <select id="creditDisclosure" resultType="map" parameterType="java.lang.Integer" >
      select
      t1.id,t1.name,t1.icon,t1.start_time,
      t3.registered_capital,t4.development_rate,
      t2.total_turnover,
      t2.total_unrepay_amount,
      t2.avg_interest_rate,
      t2.total_investment,
      t2.total_borrower,
      t2.avg_repay_period,
      t2.borrow_amount,
      t2.month_net_income,
      t2.ivestment_amount_per_person
      from platform t1
      LEFT JOIN p2p_dynamic t2 ON t1.id=t2.plat_id
      and t2.create_time=(select max(create_time) from p2p_dynamic where plat_id=#{id,jdbcType=INTEGER})
      LEFT JOIN company t3 ON t1.company=t3.id
      LEFT JOIN p2p_third_eval t4 ON t1.id=t4.plat_id
      where t1.id=#{id,jdbcType=INTEGER}
  </select>

  <select id="selectMoreTableByPrimaryKey" resultType="map" parameterType="java.lang.Integer" >

        select
        IFNULL(t1.id,'') as id,
        IFNULL(t1.name,'') as name,
        IFNULL(t1.start_time,'') as start_time,
        IFNULL(t1.icon,'') as icon,
        IFNULL(t3.name,'') as company_name,
        IFNULL(t3.registered_capital,'') as registered_capital,
        IFNULL(t4.name,'') as province_name,
        IFNULL(t8.name,'') as city_name,
        IFNULL(t5.address,'') as address,
        IFNULL(t5.phone_400,'') as phone_400,
        IFNULL(t5.email,'') as email,
        IFNULL(group_concat(t6.name Separator ','),'') as tag_name,
        IF (t9.uid is null, 'false', 'true') as attention,
        tt1.development_rate,
        tt2.avg_interest_rate,
        t1.type
        from
        platform t1
        LEFT JOIN p2p_dynamic tt2 ON t1.id=tt2.plat_id
        and tt2.create_time=(select max(create_time) from p2p_dynamic where plat_id=#{id,jdbcType=INTEGER})
        LEFT JOIN p2p_third_eval tt1 ON t1.id=tt1.plat_id
        LEFT JOIN company t3 ON t1.company=t3.id
        LEFT JOIN province t4 ON t1.province=t4.id
        LEFT JOIN city t8 ON t1.city=t8.id
        LEFT JOIN plat_contact t5 ON t5.plat_id=t1.id
        LEFT JOIN user_attention_platform t9 ON t1.id=t9.pId and t9.uid=#{userId,jdbcType=INTEGER}
        LEFT JOIN plat_rel_tag t7 ON t7.plat_id=t1.id
        LEFT JOIN tag t6 ON t7.tag_id=t6.id
        where t1.id=#{id,jdbcType=INTEGER}
        group by id, name, company_name, province_name, city_name
      </select>

      <select id="selectMoreForBank" resultType="map" parameterType="java.lang.Integer" >
        select t1.name, t1.icon, t2.is_listed, t3.total_asset,t3.total_deposit,t3.total_other,t3.total_profit,t3.total_equity,
        t3.income,t3.interest_income,t3.commission,t3.bad_asset,t3.bad_loan_rate,t3.total_provision,t3.bad_loan_rate, count(*) product_count
        from platform t1, bank_plat t2, bank_info t3, bank_product t4
        where t1.id=#{id,jdbcType=INTEGER} and t1.id=t2.plat_id and t1.id=t3.plat_id and t1.id=t4.plat_id
        group by t1.id
      </select>

      <select id="selectMoreForP2p" resultType="map" parameterType="java.lang.Integer" >
        select t1.name, t1.icon,t2.total_turnover,t2.total_unrepay_amount,t2.avg_interest_rate,t2.total_investment,
        t2.total_borrower,t2.avg_repay_period,t2.borrow_amount,t2.month_net_income,t2.ivestment_amount_per_person,t3.development_rate
        from platform t1, p2p_dynamic t2, p2p_third_eval t3
        where t1.id=#{id,jdbcType=INTEGER} and t1.id=t2.plat_id and t1.id=t3.plat_id
        and t2.create_time=(select max(tt.create_time) from p2p_dynamic tt where tt.plat_id=#{id,jdbcType=INTEGER})
      </select>

      <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Mar 12 23:14:32 CST 2017.
        -->
    delete from platform
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jzt.api.domain.PlatformExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    delete from platform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jzt.api.domain.Platform" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    insert into platform (id, type, name, 
      name_before, state, icon, 
      start_time, end_time, province, 
      city, create_time, update_time, 
      is_delete, company)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{nameBefore,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, #{province,jdbcType=INTEGER}, 
      #{city,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=INTEGER}, #{company,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jzt.api.domain.Platform" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    insert into platform
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nameBefore != null" >
        name_before,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="company != null" >
        company,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nameBefore != null" >
        #{nameBefore,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=DATE},
      </if>
      <if test="province != null" >
        #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        #{city,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jzt.api.domain.PlatformExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    select count(*) from platform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    update platform
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nameBefore != null" >
        name_before = #{record.nameBefore,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=DATE},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=INTEGER},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    update platform
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      name_before = #{record.nameBefore,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      icon = #{record.icon,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=DATE},
      end_time = #{record.endTime,jdbcType=DATE},
      province = #{record.province,jdbcType=INTEGER},
      city = #{record.city,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      company = #{record.company,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jzt.api.domain.Platform" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    update platform
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nameBefore != null" >
        name_before = #{nameBefore,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=INTEGER},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jzt.api.domain.Platform" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 12 23:14:32 CST 2017.
    -->
    update platform
    set type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      name_before = #{nameBefore,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      province = #{province,jdbcType=INTEGER},
      city = #{city,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER},
      company = #{company,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >

    select b.rank,a.id, a.type, a.name, a.name_before, a.icon, a.start_time, a.end_time, a.province, a.city, a.create_time,
        a.update_time, a.company, a.totalScore, a.totalAsset, a.typeName, a.stateName
    from
    (
    select platform.id, platform.type, platform.name, name_before, icon, start_time, end_time, province, city, platform.create_time,
    platform.update_time, company, bank_eval.total_score totalScore, bank_info.total_asset totalAsset, bank_type.id as typeId, bank_type.name typeName, plat_state.description stateName
    from platform, user_attention_platform, bank_eval, bank_info, bank_plat, bank_type, plat_state
    where platform.id = user_attention_platform.pId
    and user_attention_platform.uId = #{uId,jdbcType=INTEGER}
    and platform.type = #{type,jdbcType=INTEGER}
    and platform.id = bank_eval.plat_id
    and platform.id = bank_info.plat_id
    and platform.id = bank_plat.plat_id
    and bank_plat.type = bank_type.id
    and platform.state = plat_state.id
    ) a,
    (
    select t.*,
    case when @tid = t.typeId then @row:=@row+1 else @row:=1 end rank,
    @tid:=t.typeId
    from (
    select t1.plat_id,t3.id typeId, t2.total_score
    from bank_plat t1, bank_eval t2, bank_type t3
    where
    t1.plat_id=t2.plat_id
    and t1.type=t3.id
    order by typeId desc,total_score desc
    ) t,(SELECT @row:=0) r

    ) b
    where a.id=b.plat_id

      <if test="startRow != null and pageSize != null and pageSize != 0" >
      limit #{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>

  <select id="selectByUserIdForP2p" resultType="map" parameterType="java.lang.Integer" >

    select platform.id, platform.name,platform.icon,p2p_third_eval.development_rate,p2p_third_eval.turnover,p2p_third_eval.benefit,
    platform.start_time,company.registered_capital
    from platform, user_attention_platform, p2p_third_eval, company
    where platform.id = user_attention_platform.pId
    and user_attention_platform.uId = #{uId,jdbcType=INTEGER}
    and platform.type = #{type,jdbcType=INTEGER}
    and platform.id = p2p_third_eval.plat_id
    and platform.company = company.id

    <if test="startRow != null and pageSize != null and pageSize != 0" >
      limit #{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  
  <!--
  liaokaihong 20170318
    -->
  <select id="selectProblemPlatByState" resultMap="ProblemPlatResultMap" parameterType="java.lang.Integer" >
  select p.id , p.name ,p.icon , c.artificial_person ,c.registered_capital,c.name as company_name,s.description as state
  from platform p 
  left join company c on p.company = c.id
  left join plat_state s on p.state = s.id
  where p.state = #{state,jdbcType=INTEGER}
  </select>
  
  <select id="selectAllProblemPlat" resultMap="ProblemPlatResultMap" >
  select p.id , p.name ,p.icon , c.artificial_person ,c.registered_capital,c.name as company_name,s.description as state
  from platform p 
  left join company c on p.company = c.id
  left join plat_state s on p.state = s.id
  where p.state !=1
  </select>
  
  <select id="selectProblemPlatByName" resultMap="ProblemPlatResultMap" parameterType="java.lang.String">
  select p.id , p.name ,p.icon , c.artificial_person ,c.registered_capital,c.name as company_name,s.description as state
  from platform p 
  left join company c on p.company = c.id
  left join plat_state s on p.state = s.id
  where p.state !=1 and 
  (
  p.name like CONCAT('%',#{name},'%')  or 
  p.name_before like CONCAT('%',#{name},'%') or 
  c.name like CONCAT('%',#{name},'%')
  )
  </select>



  <select id="selectProblemPlat" resultMap="ProblemPlatResultMap" parameterType="com.jzt.api.domain.Platform" >
    select p.id , p.name ,p.icon , c.artificial_person ,c.registered_capital,c.name as company_name,s.description as state
    from platform p
    left join company c on p.company = c.id
    left join plat_state s on p.state = s.id
    where p.state !=1

    <if test="state != null" >
      and p.state = #{state,jdbcType=INTEGER}
    </if>

    <if test="name != null" >
      and
      (
      p.name like CONCAT('%',#{name},'%')  or
      p.name_before like CONCAT('%',#{name},'%') or
      c.name like CONCAT('%',#{name},'%')
      )
    </if>

    <if test="startRow != null and pageSize != null and pageSize != 0" >
      limit #{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  
   <select id="selectPlatformByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from platform
    where name = #{name,jdbcType=VARCHAR}
  </select>
  
  <!--
  liaokaihong 20170318
    -->
  <resultMap id="ProblemPlatResultMap" type="com.jzt.api.domain.ProblemPlat" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="artificial_person" property="artificial_person" jdbcType="VARCHAR" />
    <result column="registered_capital" property="registered_capital" jdbcType="DOUBLE" />
    <result column="company_name" property="company" jdbcType="VARCHAR" />
	<result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="selectByRegisteredCapital" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  select platform.id, platform.type, platform.name, name_before, state, icon,
    start_time, end_time, province, city, platform.create_time,
    platform.update_time, platform.is_delete, company.registered_capital as registeredCapital
   from platform, company, plat_rel_tag
    where platform.company = company.id
    and platform.type = 0
    and plat_rel_tag.plat_id = platform.id
    and plat_rel_tag.tag_id=#{tagType,jdbcType=INTEGER}
    order by company.registered_capital desc
   <if test="startRow != null and pageSize != null and pageSize != 0" >
      limit #{startRow,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  
</mapper>
