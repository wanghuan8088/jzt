<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jzt.api.dao.ChargeMapper" >
  <resultMap id="BaseResultMap" type="com.jzt.api.domain.Charge" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="chargeid" property="chargeid" jdbcType="VARCHAR" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="channel" property="channel" jdbcType="VARCHAR" />
    <result column="body" property="body" jdbcType="VARCHAR" />
    <result column="clientip" property="clientip" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="orderno" property="orderno" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="VARCHAR" />
    <result column="paid" property="paid" jdbcType="VARCHAR" />
    <result column="refunded" property="refunded" jdbcType="VARCHAR" />
    <result column="appid" property="appid" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="modifytime" property="modifytime" jdbcType="TIMESTAMP" />
    <result column="timeexpire" property="timeexpire" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, chargeid, subject, channel, body, clientip, amount, currency, message, address, 
    orderno, created, paid, refunded, appid, createtime, modifytime, timeexpire, description
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jzt.api.domain.ChargeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from charge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from charge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jzt.api.domain.ChargeExample" >
    delete from charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jzt.api.domain.Charge" >
    insert into charge (id, chargeid, subject, 
      channel, body, clientip, 
      amount, currency, message, 
      address, orderno, created, 
      paid, refunded, appid, 
      createtime, modifytime, timeexpire, 
      description)
    values (#{id,jdbcType=INTEGER}, #{chargeid,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{channel,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}, #{clientip,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{currency,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{orderno,jdbcType=VARCHAR}, #{created,jdbcType=VARCHAR}, 
      #{paid,jdbcType=VARCHAR}, #{refunded,jdbcType=VARCHAR}, #{appid,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{modifytime,jdbcType=TIMESTAMP}, #{timeexpire,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jzt.api.domain.Charge" >
    insert into charge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="chargeid != null" >
        chargeid,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="channel != null" >
        channel,
      </if>
      <if test="body != null" >
        body,
      </if>
      <if test="clientip != null" >
        clientip,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="orderno != null" >
        orderno,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="paid != null" >
        paid,
      </if>
      <if test="refunded != null" >
        refunded,
      </if>
      <if test="appid != null" >
        appid,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="modifytime != null" >
        modifytime,
      </if>
      <if test="timeexpire != null" >
        timeexpire,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="chargeid != null" >
        #{chargeid,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="clientip != null" >
        #{clientip,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="orderno != null" >
        #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=VARCHAR},
      </if>
      <if test="paid != null" >
        #{paid,jdbcType=VARCHAR},
      </if>
      <if test="refunded != null" >
        #{refunded,jdbcType=VARCHAR},
      </if>
      <if test="appid != null" >
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeexpire != null" >
        #{timeexpire,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jzt.api.domain.ChargeExample" resultType="java.lang.Integer" >
    select count(*) from charge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update charge
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.chargeid != null" >
        chargeid = #{record.chargeid,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.channel != null" >
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null" >
        body = #{record.body,jdbcType=VARCHAR},
      </if>
      <if test="record.clientip != null" >
        clientip = #{record.clientip,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.orderno != null" >
        orderno = #{record.orderno,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=VARCHAR},
      </if>
      <if test="record.paid != null" >
        paid = #{record.paid,jdbcType=VARCHAR},
      </if>
      <if test="record.refunded != null" >
        refunded = #{record.refunded,jdbcType=VARCHAR},
      </if>
      <if test="record.appid != null" >
        appid = #{record.appid,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifytime != null" >
        modifytime = #{record.modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.timeexpire != null" >
        timeexpire = #{record.timeexpire,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update charge
    set id = #{record.id,jdbcType=INTEGER},
      chargeid = #{record.chargeid,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      channel = #{record.channel,jdbcType=VARCHAR},
      body = #{record.body,jdbcType=VARCHAR},
      clientip = #{record.clientip,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      currency = #{record.currency,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      orderno = #{record.orderno,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=VARCHAR},
      paid = #{record.paid,jdbcType=VARCHAR},
      refunded = #{record.refunded,jdbcType=VARCHAR},
      appid = #{record.appid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      modifytime = #{record.modifytime,jdbcType=TIMESTAMP},
      timeexpire = #{record.timeexpire,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jzt.api.domain.Charge" >
    update charge
    <set >
      <if test="chargeid != null" >
        chargeid = #{chargeid,jdbcType=VARCHAR},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="clientip != null" >
        clientip = #{clientip,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="orderno != null" >
        orderno = #{orderno,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=VARCHAR},
      </if>
      <if test="paid != null" >
        paid = #{paid,jdbcType=VARCHAR},
      </if>
      <if test="refunded != null" >
        refunded = #{refunded,jdbcType=VARCHAR},
      </if>
      <if test="appid != null" >
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifytime != null" >
        modifytime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="timeexpire != null" >
        timeexpire = #{timeexpire,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jzt.api.domain.Charge" >
    update charge
    set chargeid = #{chargeid,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      channel = #{channel,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      clientip = #{clientip,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      currency = #{currency,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      orderno = #{orderno,jdbcType=VARCHAR},
      created = #{created,jdbcType=VARCHAR},
      paid = #{paid,jdbcType=VARCHAR},
      refunded = #{refunded,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      modifytime = #{modifytime,jdbcType=TIMESTAMP},
      timeexpire = #{timeexpire,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>